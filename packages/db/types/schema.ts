// Generated by ts-to-zod
import { z } from "zod";

import { Json } from "./../../../supabase/functions/_shared/database.d";

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(z.union([jsonSchema, z.undefined()])),
      z.array(jsonSchema),
    ])
    .nullable(),
);

export const cNotificationsRowSchema = z.object({
  created_at: z.string(),
  detail: z.string().nullable(),
  id: z.number(),
  title: z.string(),
});

export const cNotificationsInsertSchema = z.object({
  created_at: z.string().optional(),
  detail: z.string().optional().nullable(),
  id: z.number().optional(),
  title: z.string(),
});

export const cNotificationsUpdateSchema = z.object({
  created_at: z.string().optional(),
  detail: z.string().optional().nullable(),
  id: z.number().optional(),
  title: z.string().optional(),
});

export const companiesRowSchema = z.object({
  created_at: z.string(),
  help_url: z.string().nullable(),
  icon_url: z.string(),
  id: z.number(),
  name: z.string(),
});

export const companiesInsertSchema = z.object({
  created_at: z.string().optional(),
  help_url: z.string().optional().nullable(),
  icon_url: z.string(),
  id: z.number().optional(),
  name: z.string(),
});

export const companiesUpdateSchema = z.object({
  created_at: z.string().optional(),
  help_url: z.string().optional().nullable(),
  icon_url: z.string().optional(),
  id: z.number().optional(),
  name: z.string().optional(),
});

export const manualCommentsRowSchema = z.object({
  comment: z.string(),
  created_at: z.string(),
  created_by: z.string(),
  id: z.number(),
  manual_id: z.number(),
});

export const manualCommentsInsertSchema = z.object({
  comment: z.string(),
  created_at: z.string().optional(),
  created_by: z.string(),
  id: z.number().optional(),
  manual_id: z.number(),
});

export const manualCommentsUpdateSchema = z.object({
  comment: z.string().optional(),
  created_at: z.string().optional(),
  created_by: z.string().optional(),
  id: z.number().optional(),
  manual_id: z.number().optional(),
});

export const manualFoldersRowSchema = z.object({
  display_order: z.number(),
  id: z.number(),
  name: z.string(),
  parent_id: z.number().nullable(),
});

export const manualFoldersInsertSchema = z.object({
  display_order: z.number().optional(),
  id: z.number().optional(),
  name: z.string(),
  parent_id: z.number().optional().nullable(),
});

export const manualFoldersUpdateSchema = z.object({
  display_order: z.number().optional(),
  id: z.number().optional(),
  name: z.string().optional(),
  parent_id: z.number().optional().nullable(),
});

export const manualLastViewDatesRowSchema = z.object({
  created_at: z.string(),
  manual_id: z.number(),
  user_id: z.string(),
});

export const manualLastViewDatesInsertSchema = z.object({
  created_at: z.string().optional(),
  manual_id: z.number(),
  user_id: z.string(),
});

export const manualLastViewDatesUpdateSchema = z.object({
  created_at: z.string().optional(),
  manual_id: z.number().optional(),
  user_id: z.string().optional(),
});

export const manualRequestCommentsRowSchema = z.object({
  comment: z.string(),
  created_at: z.string(),
  id: z.number(),
  manual_request_id: z.number(),
  user_id: z.string(),
});

export const manualRequestCommentsInsertSchema = z.object({
  comment: z.string(),
  created_at: z.string().optional(),
  id: z.number().optional(),
  manual_request_id: z.number(),
  user_id: z.string(),
});

export const manualRequestCommentsUpdateSchema = z.object({
  comment: z.string().optional(),
  created_at: z.string().optional(),
  id: z.number().optional(),
  manual_request_id: z.number().optional(),
  user_id: z.string().optional(),
});

export const manualRequestsRowSchema = z.object({
  created_at: z.string(),
  created_by: z.string(),
  details: z.string(),
  id: z.number(),
});

export const manualRequestsInsertSchema = z.object({
  created_at: z.string().optional(),
  created_by: z.string(),
  details: z.string(),
  id: z.number().optional(),
});

export const manualRequestsUpdateSchema = z.object({
  created_at: z.string().optional(),
  created_by: z.string().optional(),
  details: z.string().optional(),
  id: z.number().optional(),
});

export const manualTagRelationsRowSchema = z.object({
  manual_id: z.number(),
  manual_tag_id: z.number(),
});

export const manualTagRelationsInsertSchema = z.object({
  manual_id: z.number(),
  manual_tag_id: z.number(),
});

export const manualTagRelationsUpdateSchema = z.object({
  manual_id: z.number().optional(),
  manual_tag_id: z.number().optional(),
});

export const manualTagsRowSchema = z.object({
  id: z.number(),
  name: z.string(),
});

export const manualTagsInsertSchema = z.object({
  id: z.number().optional(),
  name: z.string(),
});

export const manualTagsUpdateSchema = z.object({
  id: z.number().optional(),
  name: z.string().optional(),
});

export const manualTypesRowSchema = z.object({
  id: z.number(),
  name: z.string(),
});

export const manualTypesInsertSchema = z.object({
  id: z.number().optional(),
  name: z.string(),
});

export const manualTypesUpdateSchema = z.object({
  id: z.number().optional(),
  name: z.string().optional(),
});

export const manualsRowSchema = z.object({
  created_at: z.string(),
  created_by: z.string(),
  detail: z.string().nullable(),
  file_link: z.string().nullable(),
  file_name: z.string().nullable(),
  id: z.number(),
  manual_type_id: z.number().nullable(),
  parent_id: z.number(),
  title: z.string(),
  total_view_count: z.number(),
});

export const manualsInsertSchema = z.object({
  created_at: z.string().optional(),
  created_by: z.string().optional(),
  detail: z.string().optional().nullable(),
  file_link: z.string().optional().nullable(),
  file_name: z.string().optional().nullable(),
  id: z.number().optional(),
  manual_type_id: z.number().optional().nullable(),
  parent_id: z.number(),
  title: z.string(),
  total_view_count: z.number().optional(),
});

export const manualsUpdateSchema = z.object({
  created_at: z.string().optional(),
  created_by: z.string().optional(),
  detail: z.string().optional().nullable(),
  file_link: z.string().optional().nullable(),
  file_name: z.string().optional().nullable(),
  id: z.number().optional(),
  manual_type_id: z.number().optional().nullable(),
  parent_id: z.number().optional(),
  title: z.string().optional(),
  total_view_count: z.number().optional(),
});

export const uFavoriteManualsRowSchema = z.object({
  manual_id: z.number(),
  user_id: z.string(),
});

export const uFavoriteManualsInsertSchema = z.object({
  manual_id: z.number(),
  user_id: z.string(),
});

export const uFavoriteManualsUpdateSchema = z.object({
  manual_id: z.number().optional(),
  user_id: z.string().optional(),
});

export const uNotificationHistoryRowSchema = z.object({
  created_at: z.string(),
  notification_id: z.number(),
  user_id: z.string(),
});

export const uNotificationHistoryInsertSchema = z.object({
  created_at: z.string().optional(),
  notification_id: z.number(),
  user_id: z.string(),
});

export const uNotificationHistoryUpdateSchema = z.object({
  created_at: z.string().optional(),
  notification_id: z.number().optional(),
  user_id: z.string().optional(),
});

export const userGroupsRowSchema = z.object({
  created_at: z.string(),
  enabled: z.boolean(),
  id: z.number(),
  memo: z.string().nullable(),
  name: z.string(),
});

export const userGroupsInsertSchema = z.object({
  created_at: z.string().optional(),
  enabled: z.boolean().optional(),
  id: z.number().optional(),
  memo: z.string().optional().nullable(),
  name: z.string(),
});

export const userGroupsUpdateSchema = z.object({
  created_at: z.string().optional(),
  enabled: z.boolean().optional(),
  id: z.number().optional(),
  memo: z.string().optional().nullable(),
  name: z.string().optional(),
});

export const appRoleSchema = z.union([
  z.literal("super_admin"),
  z.literal("company_admin"),
]);

export const usersInsertSchema = z.object({
  avatar_url: z.string().optional().nullable(),
  created_at: z.string().optional(),
  email: z.string().optional().nullable(),
  group_id: z.number().optional().nullable(),
  id: z.string(),
  name: z.string().optional().nullable(),
  role: appRoleSchema.optional().nullable(),
});

export const usersUpdateSchema = z.object({
  avatar_url: z.string().optional().nullable(),
  created_at: z.string().optional(),
  email: z.string().optional().nullable(),
  group_id: z.number().optional().nullable(),
  id: z.string().optional(),
  name: z.string().optional().nullable(),
  role: appRoleSchema.optional().nullable(),
});

export const usersRowSchema = z.object({
  avatar_url: z.string().nullable(),
  created_at: z.string(),
  email: z.string().nullable(),
  group_id: z.number().nullable(),
  id: z.string(),
  name: z.string().nullable(),
  role: appRoleSchema.nullable(),
});
